class Solution:
    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:
        
        # n = len(gas)

        # for start in range(n):
        #     total = 0
        #     is_possible = True
        #     for i in range(n):
        #         curr = (start+i)%n
        #         total+=gas[curr]-cost[curr]
        #         if total < 0 :
        #             is_possible = False
        #     if is_possible:
        #         return start
        # return -1

        if sum(gas) < sum(cost):
            return  -1

        total = 0
        start = 0
        for i in range(len(gas)):
            total+=gas[i]-cost[i]
            if total < 0 :
                total = 0
                start = i+1
        return start


